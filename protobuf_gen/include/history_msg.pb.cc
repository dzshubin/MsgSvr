// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: history_msg.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "history_msg.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace IM {

namespace {

const ::google::protobuf::Descriptor* HistoryMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HistoryMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_history_5fmsg_2eproto() {
  protobuf_AddDesc_history_5fmsg_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "history_msg.proto");
  GOOGLE_CHECK(file != NULL);
  HistoryMsg_descriptor_ = file->message_type(0);
  static const int HistoryMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMsg, req_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMsg, target_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMsg, chat_message_),
  };
  HistoryMsg_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HistoryMsg_descriptor_,
      HistoryMsg::default_instance_,
      HistoryMsg_offsets_,
      -1,
      -1,
      -1,
      sizeof(HistoryMsg),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMsg, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HistoryMsg, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_history_5fmsg_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HistoryMsg_descriptor_, &HistoryMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_history_5fmsg_2eproto() {
  delete HistoryMsg::default_instance_;
  delete HistoryMsg_reflection_;
}

void protobuf_AddDesc_history_5fmsg_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::IM::protobuf_AddDesc_chat_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021history_msg.proto\022\002IM\032\nchat.proto\"R\n\nH"
    "istoryMsg\022\016\n\006req_id\030\001 \001(\003\022\021\n\ttarget_id\030\002"
    " \001(\003\022!\n\014chat_message\030\003 \003(\0132\013.IM.ChatPktb"
    "\006proto3", 127);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "history_msg.proto", &protobuf_RegisterTypes);
  HistoryMsg::default_instance_ = new HistoryMsg();
  HistoryMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_history_5fmsg_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_history_5fmsg_2eproto {
  StaticDescriptorInitializer_history_5fmsg_2eproto() {
    protobuf_AddDesc_history_5fmsg_2eproto();
  }
} static_descriptor_initializer_history_5fmsg_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HistoryMsg::kReqIdFieldNumber;
const int HistoryMsg::kTargetIdFieldNumber;
const int HistoryMsg::kChatMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HistoryMsg::HistoryMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IM.HistoryMsg)
}

void HistoryMsg::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HistoryMsg::HistoryMsg(const HistoryMsg& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IM.HistoryMsg)
}

void HistoryMsg::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  req_id_ = GOOGLE_LONGLONG(0);
  target_id_ = GOOGLE_LONGLONG(0);
}

HistoryMsg::~HistoryMsg() {
  // @@protoc_insertion_point(destructor:IM.HistoryMsg)
  SharedDtor();
}

void HistoryMsg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HistoryMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HistoryMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HistoryMsg_descriptor_;
}

const HistoryMsg& HistoryMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_history_5fmsg_2eproto();
  return *default_instance_;
}

HistoryMsg* HistoryMsg::default_instance_ = NULL;

HistoryMsg* HistoryMsg::New(::google::protobuf::Arena* arena) const {
  HistoryMsg* n = new HistoryMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HistoryMsg::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HistoryMsg*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(req_id_, target_id_);

#undef ZR_HELPER_
#undef ZR_

  chat_message_.Clear();
}

bool HistoryMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IM.HistoryMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 req_id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &req_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_target_id;
        break;
      }

      // optional int64 target_id = 2;
      case 2: {
        if (tag == 16) {
         parse_target_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &target_id_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_chat_message;
        break;
      }

      // repeated .IM.ChatPkt chat_message = 3;
      case 3: {
        if (tag == 26) {
         parse_chat_message:
          DO_(input->IncrementRecursionDepth());
         parse_loop_chat_message:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_chat_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_chat_message;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IM.HistoryMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IM.HistoryMsg)
  return false;
#undef DO_
}

void HistoryMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IM.HistoryMsg)
  // optional int64 req_id = 1;
  if (this->req_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->req_id(), output);
  }

  // optional int64 target_id = 2;
  if (this->target_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->target_id(), output);
  }

  // repeated .IM.ChatPkt chat_message = 3;
  for (unsigned int i = 0, n = this->chat_message_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->chat_message(i), output);
  }

  // @@protoc_insertion_point(serialize_end:IM.HistoryMsg)
}

::google::protobuf::uint8* HistoryMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IM.HistoryMsg)
  // optional int64 req_id = 1;
  if (this->req_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->req_id(), target);
  }

  // optional int64 target_id = 2;
  if (this->target_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->target_id(), target);
  }

  // repeated .IM.ChatPkt chat_message = 3;
  for (unsigned int i = 0, n = this->chat_message_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->chat_message(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:IM.HistoryMsg)
  return target;
}

int HistoryMsg::ByteSize() const {
  int total_size = 0;

  // optional int64 req_id = 1;
  if (this->req_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->req_id());
  }

  // optional int64 target_id = 2;
  if (this->target_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->target_id());
  }

  // repeated .IM.ChatPkt chat_message = 3;
  total_size += 1 * this->chat_message_size();
  for (int i = 0; i < this->chat_message_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->chat_message(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HistoryMsg::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HistoryMsg* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HistoryMsg>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HistoryMsg::MergeFrom(const HistoryMsg& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  chat_message_.MergeFrom(from.chat_message_);
  if (from.req_id() != 0) {
    set_req_id(from.req_id());
  }
  if (from.target_id() != 0) {
    set_target_id(from.target_id());
  }
}

void HistoryMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HistoryMsg::CopyFrom(const HistoryMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HistoryMsg::IsInitialized() const {

  return true;
}

void HistoryMsg::Swap(HistoryMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HistoryMsg::InternalSwap(HistoryMsg* other) {
  std::swap(req_id_, other->req_id_);
  std::swap(target_id_, other->target_id_);
  chat_message_.UnsafeArenaSwap(&other->chat_message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HistoryMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HistoryMsg_descriptor_;
  metadata.reflection = HistoryMsg_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HistoryMsg

// optional int64 req_id = 1;
void HistoryMsg::clear_req_id() {
  req_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 HistoryMsg::req_id() const {
  // @@protoc_insertion_point(field_get:IM.HistoryMsg.req_id)
  return req_id_;
}
 void HistoryMsg::set_req_id(::google::protobuf::int64 value) {
  
  req_id_ = value;
  // @@protoc_insertion_point(field_set:IM.HistoryMsg.req_id)
}

// optional int64 target_id = 2;
void HistoryMsg::clear_target_id() {
  target_id_ = GOOGLE_LONGLONG(0);
}
 ::google::protobuf::int64 HistoryMsg::target_id() const {
  // @@protoc_insertion_point(field_get:IM.HistoryMsg.target_id)
  return target_id_;
}
 void HistoryMsg::set_target_id(::google::protobuf::int64 value) {
  
  target_id_ = value;
  // @@protoc_insertion_point(field_set:IM.HistoryMsg.target_id)
}

// repeated .IM.ChatPkt chat_message = 3;
int HistoryMsg::chat_message_size() const {
  return chat_message_.size();
}
void HistoryMsg::clear_chat_message() {
  chat_message_.Clear();
}
const ::IM::ChatPkt& HistoryMsg::chat_message(int index) const {
  // @@protoc_insertion_point(field_get:IM.HistoryMsg.chat_message)
  return chat_message_.Get(index);
}
::IM::ChatPkt* HistoryMsg::mutable_chat_message(int index) {
  // @@protoc_insertion_point(field_mutable:IM.HistoryMsg.chat_message)
  return chat_message_.Mutable(index);
}
::IM::ChatPkt* HistoryMsg::add_chat_message() {
  // @@protoc_insertion_point(field_add:IM.HistoryMsg.chat_message)
  return chat_message_.Add();
}
::google::protobuf::RepeatedPtrField< ::IM::ChatPkt >*
HistoryMsg::mutable_chat_message() {
  // @@protoc_insertion_point(field_mutable_list:IM.HistoryMsg.chat_message)
  return &chat_message_;
}
const ::google::protobuf::RepeatedPtrField< ::IM::ChatPkt >&
HistoryMsg::chat_message() const {
  // @@protoc_insertion_point(field_list:IM.HistoryMsg.chat_message)
  return chat_message_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace IM

// @@protoc_insertion_point(global_scope)
