// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: channel_members.proto

#ifndef PROTOBUF_channel_5fmembers_2eproto__INCLUDED
#define PROTOBUF_channel_5fmembers_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "contacts.pb.h"
// @@protoc_insertion_point(includes)

namespace IM {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_channel_5fmembers_2eproto();
void protobuf_AssignDesc_channel_5fmembers_2eproto();
void protobuf_ShutdownFile_channel_5fmembers_2eproto();

class ChannelMember;
class ChannelMembersInfo;

// ===================================================================

class ChannelMembersInfo : public ::google::protobuf::Message {
 public:
  ChannelMembersInfo();
  virtual ~ChannelMembersInfo();

  ChannelMembersInfo(const ChannelMembersInfo& from);

  inline ChannelMembersInfo& operator=(const ChannelMembersInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelMembersInfo& default_instance();

  void Swap(ChannelMembersInfo* other);

  // implements Message ----------------------------------------------

  inline ChannelMembersInfo* New() const { return New(NULL); }

  ChannelMembersInfo* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelMembersInfo& from);
  void MergeFrom(const ChannelMembersInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChannelMembersInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .IM.ChannelMember channel_member = 1;
  int channel_member_size() const;
  void clear_channel_member();
  static const int kChannelMemberFieldNumber = 1;
  const ::IM::ChannelMember& channel_member(int index) const;
  ::IM::ChannelMember* mutable_channel_member(int index);
  ::IM::ChannelMember* add_channel_member();
  ::google::protobuf::RepeatedPtrField< ::IM::ChannelMember >*
      mutable_channel_member();
  const ::google::protobuf::RepeatedPtrField< ::IM::ChannelMember >&
      channel_member() const;

  // @@protoc_insertion_point(class_scope:IM.ChannelMembersInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::IM::ChannelMember > channel_member_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_channel_5fmembers_2eproto();
  friend void protobuf_AssignDesc_channel_5fmembers_2eproto();
  friend void protobuf_ShutdownFile_channel_5fmembers_2eproto();

  void InitAsDefaultInstance();
  static ChannelMembersInfo* default_instance_;
};
// -------------------------------------------------------------------

class ChannelMember : public ::google::protobuf::Message {
 public:
  ChannelMember();
  virtual ~ChannelMember();

  ChannelMember(const ChannelMember& from);

  inline ChannelMember& operator=(const ChannelMember& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChannelMember& default_instance();

  void Swap(ChannelMember* other);

  // implements Message ----------------------------------------------

  inline ChannelMember* New() const { return New(NULL); }

  ChannelMember* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChannelMember& from);
  void MergeFrom(const ChannelMember& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ChannelMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 channel_id = 1;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::int32 channel_id() const;
  void set_channel_id(::google::protobuf::int32 value);

  // repeated .IM.User users = 2;
  int users_size() const;
  void clear_users();
  static const int kUsersFieldNumber = 2;
  const ::IM::User& users(int index) const;
  ::IM::User* mutable_users(int index);
  ::IM::User* add_users();
  ::google::protobuf::RepeatedPtrField< ::IM::User >*
      mutable_users();
  const ::google::protobuf::RepeatedPtrField< ::IM::User >&
      users() const;

  // @@protoc_insertion_point(class_scope:IM.ChannelMember)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::IM::User > users_;
  ::google::protobuf::int32 channel_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_channel_5fmembers_2eproto();
  friend void protobuf_AssignDesc_channel_5fmembers_2eproto();
  friend void protobuf_ShutdownFile_channel_5fmembers_2eproto();

  void InitAsDefaultInstance();
  static ChannelMember* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ChannelMembersInfo

// repeated .IM.ChannelMember channel_member = 1;
inline int ChannelMembersInfo::channel_member_size() const {
  return channel_member_.size();
}
inline void ChannelMembersInfo::clear_channel_member() {
  channel_member_.Clear();
}
inline const ::IM::ChannelMember& ChannelMembersInfo::channel_member(int index) const {
  // @@protoc_insertion_point(field_get:IM.ChannelMembersInfo.channel_member)
  return channel_member_.Get(index);
}
inline ::IM::ChannelMember* ChannelMembersInfo::mutable_channel_member(int index) {
  // @@protoc_insertion_point(field_mutable:IM.ChannelMembersInfo.channel_member)
  return channel_member_.Mutable(index);
}
inline ::IM::ChannelMember* ChannelMembersInfo::add_channel_member() {
  // @@protoc_insertion_point(field_add:IM.ChannelMembersInfo.channel_member)
  return channel_member_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::ChannelMember >*
ChannelMembersInfo::mutable_channel_member() {
  // @@protoc_insertion_point(field_mutable_list:IM.ChannelMembersInfo.channel_member)
  return &channel_member_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::ChannelMember >&
ChannelMembersInfo::channel_member() const {
  // @@protoc_insertion_point(field_list:IM.ChannelMembersInfo.channel_member)
  return channel_member_;
}

// -------------------------------------------------------------------

// ChannelMember

// optional int32 channel_id = 1;
inline void ChannelMember::clear_channel_id() {
  channel_id_ = 0;
}
inline ::google::protobuf::int32 ChannelMember::channel_id() const {
  // @@protoc_insertion_point(field_get:IM.ChannelMember.channel_id)
  return channel_id_;
}
inline void ChannelMember::set_channel_id(::google::protobuf::int32 value) {
  
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:IM.ChannelMember.channel_id)
}

// repeated .IM.User users = 2;
inline int ChannelMember::users_size() const {
  return users_.size();
}
inline void ChannelMember::clear_users() {
  users_.Clear();
}
inline const ::IM::User& ChannelMember::users(int index) const {
  // @@protoc_insertion_point(field_get:IM.ChannelMember.users)
  return users_.Get(index);
}
inline ::IM::User* ChannelMember::mutable_users(int index) {
  // @@protoc_insertion_point(field_mutable:IM.ChannelMember.users)
  return users_.Mutable(index);
}
inline ::IM::User* ChannelMember::add_users() {
  // @@protoc_insertion_point(field_add:IM.ChannelMember.users)
  return users_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::IM::User >*
ChannelMember::mutable_users() {
  // @@protoc_insertion_point(field_mutable_list:IM.ChannelMember.users)
  return &users_;
}
inline const ::google::protobuf::RepeatedPtrField< ::IM::User >&
ChannelMember::users() const {
  // @@protoc_insertion_point(field_list:IM.ChannelMember.users)
  return users_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace IM

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_channel_5fmembers_2eproto__INCLUDED
